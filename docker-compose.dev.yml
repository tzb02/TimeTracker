version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: timetracker_dev
      POSTGRES_USER: timetracker
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./packages/server/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timetracker -d timetracker_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: packages/server/Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://timetracker:dev_password@postgres:5432/timetracker_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      PORT: 3001
    volumes:
      - ./packages/server:/app/packages/server
      - /app/packages/server/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  client:
    build:
      context: .
      dockerfile: packages/client/Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:3001
    volumes:
      - ./packages/client:/app/packages/client
      - /app/packages/client/node_modules
    depends_on:
      - server
    command: npm run dev

volumes:
  postgres_dev_data:
  redis_dev_data: